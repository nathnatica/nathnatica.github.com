<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2013-05-10T01:00:51+09:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[bash]]></title>
    <link href="http://yoursite.com/blog/2011/11/22/bash/"/>
    <updated>2011-11-22T03:48:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/22/bash</id>
    <content type="html"><![CDATA[<h4>Shell Variables</h4>

<p>$@  : <strong>single</strong> string that consists of all of the positional parameters<br/>
$* : <strong>N(number of args)</strong> separate double-quoted positional parameter strings, which are separated by spaces<br/>
$#  : number of positional parameters</p>

<p>variables defined within functions are not local(means global)<br/>
so use <code>local var1</code> in a function</p>

<p>p.148</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Plugins]]></title>
    <link href="http://yoursite.com/blog/2011/11/19/vim-plugins/"/>
    <updated>2011-11-19T01:05:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/19/vim-plugins</id>
    <content type="html"><![CDATA[<h3>vundle</h3>

<p>Introduction  <br/>
<a href="http://kldp.org/node/125263">vim 사용자를 위한 플러그인 매니저 vundle 을 소개 합니다.</a></p>

<p>Install<br/>
<a href="https://github.com/gmarik/vundle">gmarik/vundle &ndash; GitHub</a></p>

<p>Basic Commands</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:help vundle
</span><span class='line'>:BundleList # shows installed bundle list</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>install new bundle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>:BundleSearch &lt;keyword&gt;
</span><span class='line'><span class="c"># press &#39;i&#39; to install selected an item </span>
</span><span class='line'><span class="c"># and</span>
</span><span class='line'>:BundleInstall
</span></code></pre></td></tr></table></div></figure>


<p>don&rsquo;t forget adding <code>Bundle 'bundleName'</code> in the <code>.vimrc</code>file.</p>

<figure class='code'><figcaption><span>update bundle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>:BundleInstall!
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>delete bundle</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>:BundleClean <span class="c"># deletes bundles which are not listed on .vimrc</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<figure class='code'><figcaption><span>install</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>:BundleSearch Align <span class="c"># and install</span>
</span><span class='line'><span class="c">#align with separator &#39;=&#39;</span>
</span><span class='line'><span class="c">#:&#39;&lt;,&#39;&gt;Align = </span>
</span><span class='line'>
</span><span class='line'>:BundleSearch Markdown-syntax
</span><span class='line'>
</span><span class='line'>:BundleSearch closingtag.vim  <span class="c"># Ctlr+- to create a matching closing tag</span>
</span><span class='line'>
</span><span class='line'>:BundleSearch bufexplorer.zip
</span><span class='line'>
</span><span class='line'>:BundleSearch snipMate
</span><span class='line'>
</span><span class='line'>:BundleSearch AutoClose
</span><span class='line'>
</span><span class='line'>:BundleSearch ZoomWin <span class="c"># &lt;c-w-o&gt; to toggle current window zoom</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Etc]]></title>
    <link href="http://yoursite.com/blog/2011/11/18/git-summary-4/"/>
    <updated>2011-11-18T00:34:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/18/git-summary-4</id>
    <content type="html"><![CDATA[<h5>commit range</h5>

<p>X..Y is mathmatically equivalent to ^X Y (means give me all commits that are reachable from Y, and don&rsquo;t give me any commit leading up to and including X)</p>

<h5>finding commits</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git bisect start
</span><span class='line'><span class="c"># tell git the HEAD is broken</span>
</span><span class='line'>git bisect bad
</span><span class='line'><span class="c"># similarly, tell git which version works</span>
</span><span class='line'>git bisect good
</span><span class='line'><span class="c"># do something...</span>
</span><span class='line'>git bisect log
</span><span class='line'>git bisect visualize --pretty<span class="o">=</span>oneline
</span><span class='line'><span class="c"># end</span>
</span><span class='line'>git bisect reset
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># using blame - tells who last modified each line of a file and which commit made the change</span>
</span><span class='line'>git blame -L 35, init/version.c
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#using pickaxe -Ssting</span>
</span><span class='line'>git log -Sinclude --pretty<span class="o">=</span>oneline --abbrev-commit init/version.c
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># garbage collector </span>
</span><span class='line'>git gc
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Remote Repository]]></title>
    <link href="http://yoursite.com/blog/2011/11/18/git-summary-3/"/>
    <updated>2011-11-18T00:34:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/18/git-summary-3</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># create bare repository
</span><span class='line'>git clone --bare &lt;bare repo&gt;</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># add remote repository name (add to .git/config)
</span><span class='line'>git remote add &lt;remote&gt; &lt;remote url&gt;
</span><span class='line'># show remote repository list
</span><span class='line'>git remote -v
</span><span class='line'># show remote information
</span><span class='line'>git remote show &lt;remote&gt;
</span><span class='line'># rename remote
</span><span class='line'>git remote rename &lt;current name&gt; &lt;new name&gt;</span></code></pre></td></tr></table></div></figure>


<p>remote branch : local branch for reflect status of repository which resides remote!!!<br/>
depot : agreed-on authoritative copy repository, remote origin for all developers</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># fetch - update remote branch automatically
</span><span class='line'># retrieves objects and their related metadata from a remote repository
</span><span class='line'>git fetch &lt;remote&gt;
</span><span class='line'># fetch and merge changes into a local corresponding branch
</span><span class='line'>git pull
</span><span class='line'># transfers objects and their related metadata to a remote repository
</span><span class='line'>git push 
</span><span class='line'># remove remote and remote branch
</span><span class='line'>git remote rm &lt;remote&gt;
</span><span class='line'># remove remote branch which does not exist in remote repository
</span><span class='line'>git remote prune &lt;remote&gt;
</span><span class='line'># show simbol ref list of repository
</span><span class='line'>git show-ref
</span><span class='line'># show simbol ref list of remote repository
</span><span class='line'>git ls-remote &lt;remote&gt;</span></code></pre></td></tr></table></div></figure>


<p></p>

<h5>ex) creating authoritative repository (last .git part is convention)</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone --bare &lt;git repository path&gt; new_repo.git
</span><span class='line'>cd &lt;git folder&gt;
</span><span class='line'>git remote add origin &lt;path to remote repository&gt;
</span><span class='line'>git remote update</span></code></pre></td></tr></table></div></figure>


<h4>repositories with anonymous read access</h4>

<h5>publishing repositories with git-daemon</h5>

<p>first, create file named <code>git-daemon-export-ok</code> in the top-level directory of the bare repository
add this line to <code>/etc/services</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git 9418/tcp</span></code></pre></td></tr></table></div></figure>


<p>add this line to <code>/etc/initd.conf</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git stream tcp nowait nobody /usr/bin/git-daemon
</span><span class='line'>git-daemon --inetd --verbose --export-all
</span><span class='line'>--base-path=/pub/git</span></code></pre></td></tr></table></div></figure>


<p>or multiple, virtually hostd git-daemon  %H:hostname, %D:directorypath</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git stream tcp nowait nobody /usr/bin/git-daemon
</span><span class='line'>git-daemon --inetd --verbose --export-all
</span><span class='line'>--interpolated-path=/pub/%H%D</span></code></pre></td></tr></table></div></figure>


<p><code>/pub/git.example.com/software/</code><br/>
<code>/pub/www.example.org/software/</code><br/>
will be accessed with<br/>
<code>git://git.example.com/software/repository.git</code><br/>
<code>git://www.example.org/software/repository.git</code></p>

<p>if using xinetd, then <code>/etc/xinetd.d/git-daemon</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># description: The git server offers access to git repositories
</span><span class='line'>service git
</span><span class='line'>{
</span><span class='line'>  disable = no
</span><span class='line'>  type = UNLISTED
</span><span class='line'>  port = 9418
</span><span class='line'>  socket_type = stream
</span><span class='line'>  wait = no
</span><span class='line'>  user = nobody
</span><span class='line'>  server = /usr/bin/git-daemon
</span><span class='line'>  server_args = --inetd --export-all --base-path=/pub/git
</span><span class='line'>  log_on_failure += USERID
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h5>publishing repositories with using HTTP daemon</h5>

<p>setup <code>gitweb</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /path/to/bare/repo.git
</span><span class='line'>mv hooks/post-update.sample hooks/post-update
</span><span class='line'>chmod 755 hooks/post-update</span></code></pre></td></tr></table></div></figure>


<p>copy the bare repository into a directory served by a HTTP daemon</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># repositories with anonymous write access (use fo private LAN)
</span><span class='line'># when use git-daemon
</span><span class='line'>[daemon]
</span><span class='line'>receivepack = true</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Branch Diff Merge Commit]]></title>
    <link href="http://yoursite.com/blog/2011/11/18/git-summary-2/"/>
    <updated>2011-11-18T00:34:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/18/git-summary-2</id>
    <content type="html"><![CDATA[<h4>Branch</h4>

<ul>
<li>long-running branches like &lsquo;master&rsquo;</li>
<li>topic branches like bug-112, hotfix-3</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git branch &lt;target branch&gt; &lt;<span class="nb">source </span>branch&gt; <span class="c"># create  ex) git branch prs/pr-1138</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git branch <span class="c"># show local branch list</span>
</span><span class='line'>git branch -a <span class="c"># show local and remote branch list</span>
</span><span class='line'>git show-branch --more<span class="o">=</span>10 <span class="c"># show local branch history</span>
</span><span class='line'>git show-branch -a <span class="c"># show local and remote branch history</span>
</span><span class='line'><span class="c"># show partial branches</span>
</span><span class='line'>git show-branch bug/pr-1 bug/pr-2
</span><span class='line'>git show-branch bug/*
</span><span class='line'>git branch --merged       <span class="c"># show merged branches with the checkouted branch</span>
</span><span class='line'>git branch --no-merged  <span class="c"># show not merged branches</span>
</span><span class='line'>git branch -d &lt;branch&gt; <span class="c"># delete</span>
</span><span class='line'>git branch -D &lt;branch&gt; <span class="c"># force delete</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># create branch and checkout</span>
</span><span class='line'>git checkout -b &lt;branch&gt;
</span><span class='line'><span class="c"># change branch (if uncommited file exists, error occurs)</span>
</span><span class='line'>git checkout &lt;branch&gt;
</span><span class='line'><span class="c"># change branch and merge with uncommited files in working directory</span>
</span><span class='line'>git checkout -m &lt;another branch&gt;
</span><span class='line'><span class="c"># ignore data loss</span>
</span><span class='line'>git checkout -f &lt;branch&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>delete branch
</span><span class='line'>git branch -d &lt;branch&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># after accidently removing a branch or other ref,</span>
</span><span class='line'><span class="c"># you can recover it by using </span>
</span><span class='line'>git reflog
</span><span class='line'>git fsck
</span><span class='line'><span class="c"># and configuration options like</span>
</span><span class='line'><span class="c">#gc.reflogExpire</span>
</span><span class='line'><span class="c">#gc.pruneExpire</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h4>Diff</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># unified diff standardized format </span>
</span><span class='line'>diff -u &lt;file1&gt; &lt;file2&gt;
</span><span class='line'>
</span><span class='line'><span class="c"># diff working directory and index</span>
</span><span class='line'>git diff
</span><span class='line'><span class="c"># diff working directory and given commit </span>
</span><span class='line'>git diff &lt;commit&gt;
</span><span class='line'><span class="c"># diff staged changes and given commit </span>
</span><span class='line'>git diff --cached &lt;commit&gt;
</span><span class='line'>git diff --staged &lt;commit&gt;
</span><span class='line'><span class="c"># diff two arbitrary commits</span>
</span><span class='line'>git diff &lt;commit1&gt; &lt;commit2&gt;
</span><span class='line'><span class="c"># to get both staged and unstaged changes</span>
</span><span class='line'>git diff HEAD
</span><span class='line'><span class="c"># -S&quot;string&quot; searche</span>
</span><span class='line'>git diff -S<span class="s2">&quot;octopus&quot;</span> master~50
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>diff_options</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># --M (detects renames and generates simplified output)</span>
</span><span class='line'><span class="c"># -w or --ignore-all-space (ignore whitespaces)</span>
</span><span class='line'><span class="c"># --stat (statistics about two trees)</span>
</span><span class='line'>git diff --stat master~5 master &lt;directory&gt;
</span><span class='line'><span class="c"># --color</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h4>Merge</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># merge other_branch to branch</span>
</span><span class='line'>git checkout branch
</span><span class='line'>git merge other_branch
</span><span class='line'>
</span><span class='line'><span class="c"># show conflicted files</span>
</span><span class='line'>git ls-files -u
</span><span class='line'>
</span><span class='line'><span class="c"># don&#39;t use fast-forward merge (ff = lose branch history)</span>
</span><span class='line'>git merge --no-ff other_branch
</span><span class='line'>
</span><span class='line'><span class="c"># abort merge before commit (restores working directory and indexed before merge operation)</span>
</span><span class='line'>git reset --hard HEAD
</span><span class='line'><span class="c"># abort or discard the merge after it has finished</span>
</span><span class='line'>git reset --hard ORIGIN_HEAD
</span><span class='line'><span class="c"># return to the original conflict state</span>
</span><span class='line'>git checkout -m
</span></code></pre></td></tr></table></div></figure>


<hr />

<h4>Commmit</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># changes HEAD ref to point to the given commit, index, working directory unchanged</span>
</span><span class='line'>git reset --soft &lt;commit&gt;
</span><span class='line'><span class="c"># changes HEAD ref to point to the given commit, index changed as if you had just staged all the changes,  working directory unchanged(default)</span>
</span><span class='line'>git reset --mixed &lt;commit&gt;
</span><span class='line'><span class="c"># changes HEAD ref to point to the given commit, index, working directory changed </span>
</span><span class='line'>git reset --hard &lt;commit&gt;
</span><span class='line'><span class="c"># example1) unstaging</span>
</span><span class='line'>git reset HEAD foo.c
</span><span class='line'><span class="c"># exmaple2) eliminate top-most commit</span>
</span><span class='line'>git reset HEAD^
</span><span class='line'><span class="c"># alter the most recent commit (with current stage)</span>
</span><span class='line'>git commit --amend
</span><span class='line'>git commit --amend --author <span class="s2">&quot;me me &lt;me@me.com&gt;&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># rebase is used to alter where a sequence of commit is based p.182</span>
</span><span class='line'>git checkout &lt;branch&gt;
</span><span class='line'>git rebase &lt;rebased&gt;
</span><span class='line'><span class="c">#or</span>
</span><span class='line'>git rebase &lt;rebased&gt; &lt;branch&gt;
</span><span class='line'><span class="c"># situation like page.182 is often called &#39;forward porting&#39; &lt;branch&gt; is forward ported to the &lt;rebased&gt; branch</span>
</span><span class='line'>
</span><span class='line'><span class="c"># resume rebase operation after resolving conflicts</span>
</span><span class='line'>git rebase --continue
</span><span class='line'><span class="c"># abort rebase operation</span>
</span><span class='line'>git rebase --abort
</span><span class='line'>
</span><span class='line'><span class="c"># reorder, edit, removing, squashing multiple commits, splitting commit</span>
</span><span class='line'>git rebase -i &lt;to commit&gt;
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Basic]]></title>
    <link href="http://yoursite.com/blog/2011/11/17/git-summary-1/"/>
    <updated>2011-11-17T23:27:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/17/git-summary-1</id>
    <content type="html"><![CDATA[<h5>Install</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$brew install git # mac  
</span><span class='line'>$apt-get install git-core # ubuntu family  
</span><span class='line'>$yum install git-core # fedora family
</span><span class='line'>
</span><span class='line'># using macport
</span><span class='line'>sudo port install git-core +svn +doc +bash_completion +gitweb</span></code></pre></td></tr></table></div></figure>


<h5>Setting</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># .bash_profile
</span><span class='line'>export GIT_EDITOR=vim # commit message editor
</span><span class='line'>export GIT_AUTHOR_NAME=XX
</span><span class='line'>export GIT_AUTHOR_EMAIL=XX</span></code></pre></td></tr></table></div></figure>


<p>or use <code>git config</code> command</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git config --unset --global user.email
</span></code></pre></td></tr></table></div></figure>


<h5>.gitignore file sample</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># .gitignore</span>
</span><span class='line'>ignore-me-everywhere.txt
</span><span class='line'>.DS_Store
</span><span class='line'>ignore-dir/ <span class="c"># ignore directory</span>
</span><span class='line'><span class="c"># using wild cards</span>
</span><span class='line'>*.<span class="o">[</span>oa<span class="o">]</span>
</span><span class='line'>tmp/**/*
</span><span class='line'>log/*
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git init
</span><span class='line'>git clone &lt;<span class="nb">source </span>repository&gt; &lt;target directory&gt;
</span><span class='line'>git status
</span><span class='line'><span class="c"># see indexed files</span>
</span><span class='line'>git ls-files -s
</span><span class='line'>git add &lt;filename&gt;
</span><span class='line'>git add &lt;directory&gt;
</span><span class='line'><span class="c"># currnet directory indexing</span>
</span><span class='line'>git add .
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># commit</span>
</span><span class='line'>git commit -m <span class="s2">&quot;&quot;</span> --author<span class="o">=</span><span class="s2">&quot;My Name &lt;aaa@mail.com&gt;&quot;</span>
</span><span class='line'>git commit index.html
</span><span class='line'>git commit -a -m <span class="s2">&quot;commit all modified(indexing and commit at once)&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># show</span>
</span><span class='line'>git log
</span><span class='line'>git log -1 --pretty<span class="o">=</span>oneline 534adf
</span><span class='line'>git log -p -2 <span class="c"># shows patch for recent 2 commits</span>
</span><span class='line'>git log --pretty<span class="o">=</span>short --abbrev-commit --stat master~12..master~10
</span><span class='line'><span class="c"># other log options  </span>
</span><span class='line'><span class="c"># --relative-date</span>
</span><span class='line'><span class="c"># --pretty=format:&quot;%h %s&quot;  # shows abbrev-hash and subject</span>
</span><span class='line'><span class="c"># --since=2.weeks</span>
</span><span class='line'><span class="c"># -- &lt;path name&gt; &lt;or file name&gt;</span>
</span><span class='line'>
</span><span class='line'>git show adf67da6f8dadf5af45a
</span><span class='line'>git show-branch --more<span class="o">=</span>10
</span><span class='line'>git diff &lt;old commit id&gt; &lt;new commit id&gt;
</span><span class='line'>git config -l <span class="c"># show config</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># remove</span>
</span><span class='line'><span class="c"># to untrack file (and delete from working directory)</span>
</span><span class='line'>git rm noneed.html
</span><span class='line'>git rm log/<span class="se">\*</span>.log <span class="c"># delete *.log</span>
</span><span class='line'><span class="c"># delete from index and working directory</span>
</span><span class='line'>git rm -f &lt;file&gt;
</span><span class='line'><span class="c"># delete from index only</span>
</span><span class='line'>git rm --cached &lt;file&gt; <span class="c"># unstage file</span>
</span><span class='line'>git reset HEAD -- &lt;file&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># rename</span>
</span><span class='line'>mv foo.html bar.html
</span><span class='line'>git rm foo.html
</span><span class='line'>git add bar.html
</span><span class='line'><span class="c">#or </span>
</span><span class='line'>git mv foo.html bar.html
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># configure alias</span>
</span><span class='line'>git config --global alias.show-graph <span class="s1">&#39;log --graph --abbrev-commit --pretty=oneline --decorate&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># Lightweight Tag</span>
</span><span class='line'>git tag v0.1  <span class="c"># create tag</span>
</span><span class='line'>git tag -m<span class="s2">&quot;Tag Version 1.0&quot;</span> V1.0 3ed354 <span class="c"># create tag for commit 3ed354</span>
</span><span class='line'>git tag <span class="c"># show tag list</span>
</span><span class='line'>git show v0.1 <span class="c"># show tag info</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># diff</span>
</span><span class='line'>git diff --cached
</span><span class='line'>
</span><span class='line'><span class="c"># remove index and working copy both</span>
</span><span class='line'>git rm filename
</span><span class='line'>
</span><span class='line'><span class="c"># to recover from deleted file  </span>
</span><span class='line'>git checkout HEAD -- filename
</span><span class='line'>git checkout -- filename
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intellij Hotkey]]></title>
    <link href="http://yoursite.com/blog/2011/11/17/intellij-hotkey/"/>
    <updated>2011-11-17T21:31:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/17/intellij-hotkey</id>
    <content type="html"><![CDATA[<p><a href="http://www.javacodegeeks.com/2011/11/whats-cool-in-intellijidea-part-i.html">read more</a></p>

<p>Alt+Shift+N > Goto Class<br/>
Ctrl+Shift+N > Goto File<br/>
Ctrl+Shift+Alt+N    Goto Symbol</p>

<p>Alt+Home > Show Navigation Bar<br/>
Shift+Home > Show Navigation Bar(custom added)</p>

<p>Ctrl+E > Recent Files<br/>
Ctrl+Shift+E > Recently Changed Files</p>

<p>Ctrl+Shift+I > Quick Definition View (in view)<br/>
Ctrl+Shift+I > Code Implement Methods (custom deleted)</p>

<p>Ctrl+Alt+B > Implementations<br/>
Ctrl+T > Implementations</p>

<p>Alt+F7 > Find Usage</p>

<p>Ctrl+Shift+F7 > Toggle Highlight</p>

<p>Ctrl+Shift+# > Toggle Bookmark<br/>
Ctrl+# > Goto Bookmark</p>

<p>Ctrl+J > Insert Live Template (iter, itar, ifn, inn, soutv, &hellip;)<br/>
Ctrl+Alt+T > Surround With</p>

<p>Ctrl+Shift+W > Window Close All(custom added?)</p>

<p>Shift+F10 > Restart Server<br/>
Ctrl+F9 > Resume Program(+Shift select &ndash;> RunMode)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basic Linux Command]]></title>
    <link href="http://yoursite.com/blog/2011/11/16/basic-linux-command/"/>
    <updated>2011-11-16T22:28:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/16/basic-linux-command</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> - <span class="c"># back to the previous directory</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>cut -d: -f1 &lt; /etc/passwd <span class="c"># delimiter :, first field</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>nice -n &lt;increment&gt; &lt;<span class="nb">command</span>&gt; <span class="c"># set priority (-20 to 20 : lowest prior. default 10)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>History Expansion</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>!! <span class="c"># Refers to the last command  </span>
</span><span class='line'>!string <span class="c"># Refers to the most recent command starting with string  </span>
</span><span class='line'>^string1^string2 <span class="c"># Repeat the last command, replacing string1 with string2  </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>기본적으로 <code>alias</code>는 커맨드줄의 처음에 밖에 사용할수 없지만 이퀄사인 오른쪽이 공백으로 끝나면 다음 단어도 alias치환할려고 한다.</p>

<figure class='code'><figcaption><span>.bash_profile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">alias cd</span><span class="o">=</span><span class="s1">&#39;cd &#39;</span>
</span><span class='line'><span class="nb">alias </span><span class="nv">longdir</span><span class="o">=</span><span class="s1">&#39;/Users/nathnatica/dropbox/octopress/source/_post&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>longdir <span class="c"># success</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Posting]]></title>
    <link href="http://yoursite.com/blog/2011/11/15/posting/"/>
    <updated>2011-11-15T00:00:00+09:00</updated>
    <id>http://yoursite.com/blog/2011/11/15/posting</id>
    <content type="html"><![CDATA[<h5>Markdown Basic</h5>

<p><a href="http://en.wikipedia.org/wiki/Markdown">Markdown Wiki</a><br/>
<a href="http://daringfireball.net/projects/markdown/syntax">Official Markdown project at Daring Fireball</a></p>

<h5>Markdown Code Syntax</h5>

<p><code>some code</code></p>

<pre><code>`some code`  
</code></pre>

<h5>Octopress Code Block Syntax</h5>

<pre><code>``` [language] [title] [url] [link text]
some code
```
</code></pre>

<h5>Octopress Posting</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="o">]</span>
</span><span class='line'>rake new_page<span class="o">[</span>about<span class="o">]</span> <span class="c"># creates source/about/index.markdown -&gt; site.com/about/index.html  </span>
</span><span class='line'>rake new_page<span class="o">[</span>about/me.html<span class="o">]</span> <span class="c"># creates source/about/me.markdown -&gt; site.com/about/me.html  </span>
</span><span class='line'>rake generate
</span><span class='line'>rake preview  <span class="c"># and localhost:4000  </span>
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
